<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
<modelVersion>4.0.0</modelVersion>

<parent>
    <groupId>org.kie.uberfire</groupId>
    <artifactId>kie-uberfire-wires</artifactId>
    <version>6.2.0-SNAPSHOT</version>
  </parent>

  <artifactId>kie-uberfire-wires-webapp</artifactId>
  <packaging>war</packaging>

  <name>KIE Uberfire Wires :: WebApp</name>
  <description>Wires WebApp</description>

  <dependencies>
    <dependency>
      <groupId>org.owasp.encoder</groupId>
      <artifactId>encoder</artifactId>
      <version>1.1</version>
    </dependency>

    <!--Logs-->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>

    <!--Wires-->
    <dependency>
      <groupId>org.kie.uberfire</groupId>
      <artifactId>kie-uberfire-wires-core-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.kie.uberfire</groupId>
      <artifactId>kie-uberfire-wires-core-client</artifactId>
    </dependency>

    <dependency>
      <groupId>com.emitrom</groupId>
      <artifactId>lienzo-core</artifactId>
    </dependency>

    <!--Wires Scratch Pad dependencies-->
    <dependency>
      <groupId>org.kie.uberfire</groupId>
      <artifactId>kie-uberfire-wires-core-scratchpad</artifactId>
    </dependency>

    <!--Wires Trees dependencies-->
    <dependency>
      <groupId>org.kie.uberfire</groupId>
      <artifactId>kie-uberfire-wires-core-trees</artifactId>
    </dependency>

    <!--Bayesian Network dependencies-->
    <dependency>
      <groupId>org.kie.uberfire</groupId>
      <artifactId>kie-uberfire-wires-bayesian-parser-backend</artifactId>
    </dependency>

    <dependency>
      <groupId>org.kie.uberfire</groupId>
      <artifactId>kie-uberfire-wires-bayesian-network-client</artifactId>
    </dependency>

    <!-- Guvnor -->
    <dependency>
      <groupId>org.guvnor</groupId>
      <artifactId>guvnor-structure-backend</artifactId>
    </dependency>

    <dependency>
      <groupId>org.guvnor</groupId>
      <artifactId>guvnor-structure-client</artifactId>
    </dependency>

    <!-- UberFire -->
    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-all</artifactId>
    </dependency>

    <dependency>
      <groupId>org.uberfire</groupId>
      <artifactId>uberfire-workbench-processors</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Errai AS -->
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-jboss-as-support</artifactId>
    </dependency>

    <!-- CDI Integration Modules -->
    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-cdi-client</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-javax-enterprise</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-weld-integration</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.errai</groupId>
      <artifactId>errai-security-picketlink</artifactId>
    </dependency>

    <!-- Weld Modules -->
    <dependency>
      <groupId>org.jboss.weld.se</groupId>
      <artifactId>weld-se-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.weld.servlet</groupId>
      <artifactId>weld-servlet-core</artifactId>
    </dependency>

    <!-- GWT and GWT Extensions -->
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- PicketLink has a hard dependency on JBoss Logging.
 Since this app deploys to Jetty, we include this as a runtime-scoped dependency.
 If deploying to JBoss AS or WildFly, you would set this to provided scope. -->
    <dependency>
      <groupId>org.jboss.logging</groupId>
      <artifactId>jboss-logging</artifactId>
      <version>3.1.4.GA</version>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <!-- Include src/main/java in order not to break the Eclipse GWT plug-in -->
      <resource>
        <directory>src/main/java</directory>
      </resource>
      <!-- Include module descriptors from src/main/resources in order not to
        break the Intellij GWT plug-in -->
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>2.5.0</version>
        <configuration>
          <module>org.kie.uberfire.wires.FastCompiledWiresShowcase</module>
          <logLevel>INFO</logLevel>
          <runTarget>wires.html</runTarget>
          <extraJvmArgs>-Xmx1024m -XX:MaxPermSize=256m</extraJvmArgs>
          <soyc>false</soyc>
          <gwtSdkFirstInClasspath>true</gwtSdkFirstInClasspath>
          <compileSourcesArtifacts>
            <!-- UberFire -->
            <compileSourcesArtifact>org.uberfire:uberfire-commons</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-nio2-model</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-js</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-security-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-security-client</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-client-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-workbench-client</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-workbench-client-backend</compileSourcesArtifact>
            <compileSourcesArtifact>org.uberfire:uberfire-backend-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.guvnor:guvnor-structure-client</compileSourcesArtifact>
            <compileSourcesArtifact>org.kie:wires-core-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.kie:wires-core-client</compileSourcesArtifact>
            <compileSourcesArtifact>org.kie:wires-core-scratchpad</compileSourcesArtifact>
            <compileSourcesArtifact>org.kie:wires-trees</compileSourcesArtifact>
            <compileSourcesArtifact>org.kie:wires-bayesian-parser-api</compileSourcesArtifact>
            <compileSourcesArtifact>org.kie:wires-bayesian-network-client</compileSourcesArtifact>
          </compileSourcesArtifacts>
        </configuration>
        <executions>
          <execution>
            <id>gwt-clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
          <execution>
            <id>gwt-compile</id>
            <goals>
              <goal>resources</goal>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <warName>${project.artifactId}</warName>
          <outputFileNameMapping>@{artifactId}@-@{baseVersion}@@{dashClassifier?}@.@{extension}@</outputFileNameMapping>
          <packagingExcludes>**/javax/**/*.*,**/client/**/*.class</packagingExcludes>
          <archive>
            <addMavenDescriptor>false</addMavenDescriptor>
          </archive>
        </configuration>
      </plugin>
      <!-- Tests are skipped by default because they require additional GWT
        dependencies. Run mvn with -Pintegration-test to enable testing. -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.15</version>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.4.1</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}</directory>
              <includes>
                <include>.errai/**</include>
                <include>.niogit/**</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>gwt-maven-plugin</artifactId>
                    <versionRange>[2.3.0,)</versionRange>
                    <goals>
                      <goal>resources</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.jboss.errai</groupId>
                    <artifactId>jacoco-gwt-maven-plugin</artifactId>
                    <versionRange>[0.0,)</versionRange>
                    <goals>
                      <goal>prepare-agent</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <profiles>
    <profile>
      <id>fullProfile</id>
      <activation>
        <property>
          <name>full</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin><!-- Keep in sync with soa profile -->
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>gwt-maven-plugin</artifactId>
            <configuration>
              <!-- Build all GWT permutations and optimize them -->
              <module>org.kie.uberfire.wires.WiresShowcase</module>
              <draftCompile>false</draftCompile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
